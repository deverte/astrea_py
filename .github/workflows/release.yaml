name: "release"

on:
  push:
    tags: ["v*"]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        # python-version: ["3.10", "3.11", "3.12", "3.13"]
        os: [macos-latest]
        python-version: ["3.13"]

    steps:
      - uses: actions/checkout@v4

      - uses: extractions/setup-just@v3

      - name: Install system packages
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt-get update
            sudo apt-get install -y \
              cmake \
              ninja
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            brew install \
              cmake \
              ninja
          elif [[ "$RUNNER_OS" == "Windows" ]]; then
            choco install -y \
              cmake \
              ninja
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python packages
        shell: bash
        run: |
          python3 -m pip install --upgrade \
            cibuildwheel==3.1.3 \
            pip \
            twine

      - name: Install Eigen
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt-get update
            sudo apt-get install -y libeigen3-dev
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            brew install eigen
          elif [[ "$RUNNER_OS" == "Windows" ]]; then
            choco install eigen --version 3.4.0 -y
          fi

      - name: Build wheel
        shell: bash
        env:
          CIBW_BEFORE_ALL: |
            git clone --branch v0.8.0 https://github.com/deverte/astrea # managed by justfile
            mkdir astrea/build
            cd astrea/build && \
              cmake -G Ninja .. && \
              ninja install
          CIBW_BEFORE_BUILD: |
            pip3 install pybind11

            if [[ "$RUNNER_OS" == "Windows" ]]; then
              EIGEN_PATH="C:/Program Files/eigen3"
            else
              EIGEN_PATH="/usr/local/include/eigen3"
            fi
            PYBIND11_PATH=$(python3 -c "import pybind11; print(pybind11.get_cmake_dir())")
            PYTHON_PATH=$(python3 -c "import sys; print(sys.prefix.replace('\\\\', '/'))")

            mkdir -p build
            cd build && \
              cmake .. \
                -G Ninja \
                -DCMAKE_PREFIX_PATH="$EIGEN_PATH;$PYBIND11_PATH;$PYTHON_PATH" && \
              cmake --build .
        run: |
          python3 -m cibuildwheel --output-dir wheelhouse

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

      # - name: Publish to PyPI
      #   if: success()
      #   env:
      #     TWINE_USERNAME: __token__
      #     TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      #   run: |
      #     python -m twine upload --skip-existing wheelhouse/*.whl
