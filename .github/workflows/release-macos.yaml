name: "release-macos"

on:
  push:
    tags: ["v*"]

jobs:
  release-macos:
    strategy:
      matrix:
        os:
          - macos-latest # arm64
          - macos-13 # x86-64
        python-version:
          - "3.13"
          - "3.12"
          - "3.11"
          - "3.10"

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build tools
        shell: bash
        run: |
          brew install \
            cmake \
            ninja

      - name: Install Python packages
        shell: bash
        run: |
          python3 -m pip install --upgrade \
            build \
            pip \
            pybind11 \
            setuptools \
            twine

      - name: Install Eigen
        shell: bash
        run: |
          brew install eigen

      - name: Install Astrea
        shell: bash
        run: |
          git clone --branch v0.8.0 https://github.com/deverte/astrea # managed by justfile
          mkdir -p astrea/build && \
          cd astrea/build && \
            cmake .. -G Ninja && \
            sudo ninja install && \
            cd ..

      - name: Build wheel (macos arm64)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          export Eigen3_INCLUDE_DIRS="/opt/homebrew/Cellar/eigen/3.4.0_1/include/eigen3"
          export PYBIND11_PATH=$(python3 -c "import pybind11; print(pybind11.get_cmake_dir())")

          mkdir -p build && \
          cd build && \
            cmake .. \
              -G Ninja \
              -DCMAKE_PREFIX_PATH="$PYBIND11_PATH" && \
            cmake --build . && \
            cd ..

          python3 -m build --no-isolation --wheel --outdir ./wheelhouse

      - name: Build wheel (macos x86-64)
        if: matrix.os == 'macos-13'
        shell: bash
        run: |
          export Eigen3_INCLUDE_DIRS="/usr/local/Cellar/eigen/3.4.0_1/include/eigen3"
          export PYBIND11_PATH=$(python3 -c "import pybind11; print(pybind11.get_cmake_dir())")

          mkdir -p build && \
          cd build && \
            cmake .. \
              -G Ninja \
              -DCMAKE_PREFIX_PATH="$PYBIND11_PATH" && \
            cmake --build . && \
            cd ..

          python3 -m build --no-isolation --wheel --outdir ./wheelhouse

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
          path: ./wheelhouse/*.whl

      - name: Publish to PyPI
        if: success()
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m twine upload --skip-existing wheelhouse/*.whl
