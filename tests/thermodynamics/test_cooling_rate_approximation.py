import astrea as aa
import numpy as np
import pytest


def test_L_X():
    L_X = aa.thermodynamics.cooling_rate_approximation.L_X

    Lambda_vs_T = np.array([
        [1.00e+04, 1.05e+04, 1.10e+04, 1.16e+04, 1.22e+04, 1.28e+04, 1.34e+04, 1.41e+04, 1.48e+04, 1.55e+04, 1.63e+04, 1.71e+04, 1.80e+04, 1.89e+04, 1.99e+04, 2.09e+04, 2.20e+04, 2.31e+04, 2.43e+04, 2.56e+04, 2.69e+04, 2.83e+04, 2.98e+04, 3.14e+04, 3.30e+04, 3.47e+04, 3.65e+04, 3.84e+04, 4.04e+04, 4.26e+04, 4.48e+04, 4.71e+04, 4.96e+04, 5.22e+04, 5.49e+04, 5.78e+04, 6.08e+04, 6.40e+04, 6.74e+04, 7.09e+04, 7.46e+04, 7.86e+04, 8.27e+04, 8.70e+04, 9.16e+04, 9.64e+04, 1.02e+05, 1.07e+05, 1.12e+05, 1.18e+05, 1.24e+05, 1.31e+05, 1.38e+05, 1.45e+05, 1.53e+05, 1.61e+05, 1.69e+05, 1.78e+05, 1.88e+05, 1.98e+05, 2.08e+05, 2.19e+05, 2.30e+05, 2.42e+05, 2.55e+05, 2.69e+05, 2.83e+05, 2.98e+05, 3.13e+05, 3.30e+05, 3.47e+05, 3.66e+05, 3.85e+05, 4.05e+05, 4.26e+05, 4.49e+05, 4.72e+05, 4.97e+05, 5.23e+05, 5.51e+05, 5.80e+05, 6.10e+05, 6.43e+05, 6.76e+05, 7.12e+05, 7.49e+05, 7.89e+05, 8.30e+05, 8.74e+05, 9.20e+05, 9.69e+05, 1.02e+06, 1.07e+06, 1.13e+06, 1.19e+06, 1.25e+06, 1.32e+06, 1.39e+06, 1.46e+06, 1.54e+06, 1.62e+06, 1.70e+06, 1.79e+06, 1.89e+06, 1.99e+06, 2.09e+06, 2.20e+06, 2.32e+06, 2.44e+06, 2.57e+06, 2.70e+06, 2.84e+06, 2.99e+06, 3.15e+06, 3.32e+06, 3.49e+06, 3.68e+06, 3.87e+06, 4.07e+06, 4.29e+06, 4.51e+06, 4.75e+06, 5.00e+06, 5.01e+06, 5.25e+06, 5.50e+06, 5.75e+06, 6.03e+06, 6.31e+06, 6.61e+06, 6.92e+06, 7.24e+06, 7.59e+06, 7.94e+06, 8.32e+06, 8.71e+06, 9.12e+06, 9.55e+06, 1.00e+07, 1.05e+07, 1.10e+07, 1.15e+07, 1.20e+07, 1.26e+07, 1.32e+07, 1.38e+07, 1.45e+07, 1.51e+07, 1.58e+07, 1.66e+07, 1.74e+07, 1.82e+07, 1.91e+07, 2.00e+07, 2.09e+07, 2.19e+07, 2.29e+07, 2.40e+07, 2.51e+07, 2.63e+07, 2.75e+07, 2.88e+07, 3.02e+07, 3.16e+07, 3.31e+07, 3.47e+07, 3.63e+07, 3.80e+07, 3.98e+07, 4.17e+07, 4.37e+07, 4.57e+07, 4.79e+07, 5.01e+07, 5.25e+07, 5.50e+07, 5.75e+07, 6.03e+07, 6.31e+07, 6.61e+07, 6.92e+07, 7.24e+07, 7.59e+07, 7.94e+07, 8.32e+07, 8.71e+07, 9.12e+07, 9.55e+07, 1.00e+08],
        [1.12e-21, 1.27e-21, 1.44e-21, 1.63e-21, 1.83e-21, 2.04e-21, 2.28e-21, 2.53e-21, 2.81e-21, 3.14e-21, 3.47e-21, 3.84e-21, 4.24e-21, 4.67e-21, 5.15e-21, 5.60e-21, 6.09e-21, 6.63e-21, 7.24e-21, 7.93e-21, 8.73e-21, 9.66e-21, 1.07e-20, 1.20e-20, 1.35e-20, 1.52e-20, 1.72e-20, 1.96e-20, 2.23e-20, 2.55e-20, 2.92e-20, 3.34e-20, 3.83e-20, 4.37e-20, 5.00e-20, 5.70e-20, 6.48e-20, 7.36e-20, 8.33e-20, 9.40e-20, 1.06e-19, 1.19e-19, 1.33e-19, 1.48e-19, 1.64e-19, 1.82e-19, 2.01e-19, 2.21e-19, 2.42e-19, 2.65e-19, 2.89e-19, 3.15e-19, 3.42e-19, 3.70e-19, 3.99e-19, 4.30e-19, 4.62e-19, 4.95e-19, 5.29e-19, 5.65e-19, 6.02e-19, 6.40e-19, 6.79e-19, 7.19e-19, 7.60e-19, 8.03e-19, 8.46e-19, 8.90e-19, 9.35e-19, 9.81e-19, 1.03e-18, 1.07e-18, 1.12e-18, 1.17e-18, 1.22e-18, 1.27e-18, 1.32e-18, 1.37e-18, 1.42e-18, 1.47e-18, 1.53e-18, 1.58e-18, 1.63e-18, 1.68e-18, 1.73e-18, 1.79e-18, 1.84e-18, 1.89e-18, 1.94e-18, 1.99e-18, 2.04e-18, 2.09e-18, 2.14e-18, 2.19e-18, 2.24e-18, 2.29e-18, 2.34e-18, 2.38e-18, 2.43e-18, 2.47e-18, 2.51e-18, 2.55e-18, 2.59e-18, 2.63e-18, 2.67e-18, 2.70e-18, 2.74e-18, 2.77e-18, 2.80e-18, 2.83e-18, 2.86e-18, 2.89e-18, 2.91e-18, 2.94e-18, 2.96e-18, 2.98e-18, 3.00e-18, 3.02e-18, 3.03e-18, 3.05e-18, 3.06e-18, 3.07e-18, 3.08e-18, 3.08e-18, 3.09e-18, 3.10e-18, 3.10e-18, 3.11e-18, 3.11e-18, 3.12e-18, 3.12e-18, 3.12e-18, 3.13e-18, 3.13e-18, 3.13e-18, 3.13e-18, 3.13e-18, 3.13e-18, 3.13e-18, 3.12e-18, 3.12e-18, 3.12e-18, 3.12e-18, 3.12e-18, 3.12e-18, 3.12e-18, 3.12e-18, 3.12e-18, 3.11e-18, 3.11e-18, 3.12e-18, 3.12e-18, 3.12e-18, 3.12e-18, 3.12e-18, 3.13e-18, 3.13e-18, 3.13e-18, 3.14e-18, 3.14e-18, 3.15e-18, 3.16e-18, 3.17e-18, 3.18e-18, 3.19e-18, 3.20e-18, 3.21e-18, 3.22e-18, 3.24e-18, 3.25e-18, 3.27e-18, 3.29e-18, 3.31e-18, 3.33e-18, 3.35e-18, 3.37e-18, 3.39e-18, 3.42e-18, 3.44e-18, 3.47e-18, 3.50e-18, 3.53e-18, 3.56e-18, 3.60e-18, 3.63e-18, 3.67e-18, 3.71e-18, 3.74e-18, 3.79e-18],
    ])
    T_X = np.array([1e4, 1.5e4])
    N_e_X = np.array([1e7, 1e8])
    N_A_X = np.array([1e3, 1e4])

    cooling = L_X(Lambda_vs_T=Lambda_vs_T, T_X=T_X, N_e_X=N_e_X, N_A_X=N_A_X)

    assert cooling.shape[0] == 2
    assert cooling[0] == pytest.approx(1.12e-11)
    assert cooling[1] == pytest.approx(2.904285714285714e-09, rel=1e-3)